plugins {
    id 'org.quiltmc.loom' version "1.8.+"
    id 'io.github.ladysnake.chenille' version "0.12.0"
}

group = rootProject.maven_group
archivesBaseName = rootProject.name

allprojects {
    apply plugin: 'maven-publish'
    apply plugin: 'org.quiltmc.loom'
    apply plugin: 'io.github.ladysnake.chenille'

    version = project.mod_version

    chenille {
        javaVersion = 17
    }

    sourceCompatibility = 17
    targetCompatibility = 17

    chenille {
        license = 'GPL_WITH_MC_EXCEPTION'
        displayName = 'Requiem'
        owners = 'Ladysnake'
    }

    license {
        exclude '**/package-info.java'
    }

    repositories {
        mavenLocal()
        chenille.repositories {
            cotton()
            jamieswhiteshirt()
            cursemaven()
            shedaniel()
            lucko()
            modrinth()
            jitpack()
        }
        maven {
            name = 'Quilt'
            url = 'https://maven.quiltmc.org/repository/snapshot'
        }
        maven { repo ->
            repo.name = "Ladysnake Mods"
            repo.setUrl("https://maven.ladysnake.org/releases")
            repo.content {
                it.includeGroupByRegex("dev\\.emi.*")
                it.includeGroup("io.github.ladysnake")
                it.includeGroup("org.ladysnake")
                it.includeGroupByRegex("(dev|io\\.github)\\.onyxstudios.*")
                it.includeGroupByRegex("org.quiltmc.*")
            }
        }
        maven {
            url = 'https://maven.willbl.dev/releases'
            content {
                includeGroupByRegex 'com\\.williambl.*'
            }
        }
        maven {
            name = "Appleskin"
            url = "https://maven.ryanliptak.com/"
            content {
                includeGroup 'squeek.appleskin'
            }
        }
        maven {
            url = 'https://maven.cafeteria.dev'
            content {
                includeGroup 'net.adriantodt.fabricmc'
            }
        }
        maven {
            url 'https://maven.blamejared.com'
            content {
                includeGroupByRegex 'vazkii\\..*'
            }
        }
        maven {
            url = "https://maven.theillusivec4.top"
            content {
                includeGroupByRegex 'top\\.theillusivec4\\..*'
            }
        }
        maven {
            url = "https://maven.siphalor.de"
            content {
                includeGroup 'de.siphalor'
            }
        }
        maven {
            name = "TerraformersMC"
            url = "https://maven.terraformersmc.com/releases"
            content {
                includeGroupByRegex 'com.terraformersmc.*'
                includeGroup 'dev.emi'
            }
        }
        mavenLocal()
        maven {
            name = "Ladysnake Mods"
            url = "https://maven.ladysnake.org/releases"
            content {
                includeGroupByRegex '(org|io\\.github).ladysnake.*'
                includeGroupByRegex '(dev|io\\.github)\\.onyxstudios.*'
            }
        }
        maven {
            name = "Nexus Repository Manager"
            url = 'https://oss.sonatype.org/content/repositories/snapshots'
        }
    }

    processResources {
        inputs.property "version", project.version

        filesMatching("quilt.mod.json") {
            expand "version": project.version
        }
    }

    java {
        withSourcesJar()
    }

    dependencies {
        //to change the versions see the gradle.properties file
        minecraft "com.mojang:minecraft:${project.minecraft_version}"
        mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
        modImplementation "org.quiltmc:quilt-loader:${project.loader_version}"
        //modImplementation "org.quiltmc:qsl:${qsl_version}+${minecraft_version}"
        modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
        //modImplementation "org.quiltmc.quilted-fabric-api:quilted-fabric-api:${quilted_fabric_api_version}-${minecraft_version}"

        compileOnly("com.google.code.findbugs:jsr305:3.0.2")
        compileOnly 'org.jetbrains:annotations:26.0.1'
        compileOnly("org.apiguardian:apiguardian-api:1.1.2")
        compileOnly("com.demonwav.mcdev:annotations:2.1.0")
    }

}

chenille {
    configureTestmod()
    configurePublishing {
        mainArtifact = remapJar.archiveFile
        withLadysnakeMaven()
        withCurseforgeRelease()
        withGithubRelease()
        withModrinthRelease()
    }
}

license {
    exclude '**/model/lib/**.java'
    exclude '**/RayHelper.java'
}

dependencies {
    // Looking for version definitions? see https://docs.gradle.org/7.4-rc-1/userguide/platforms.html

    // Required dependencies
    api include(project(path: ":requiem-api", configuration: "namedElements")) { transitive = false }
    api include(project(path: ":requiem-core", configuration: "namedElements")) { transitive = false }
    api include(project(path: ":requiem-core:vaquero", configuration: "namedElements"))

    include libs.bundles.requiredLibraries

    // Test dependencies
    testImplementation testLibs.junit
    testImplementation testLibs.mockito
    testmodImplementation testLibs.mockito
    modLocalImplementation(testLibs.elmendorf) {
        exclude group: "net.fabricmc"
        exclude group: "net.fabricmc.fabric-api"
    }

    // Optional dependencies
    modCompileOnly(libs.modmenu) { transitive = false }
    modLocalRuntime(libs.modmenu) { transitive = false }
    modCompileOnly (libs.bundles.cloth) { transitive = false }
    modLocalRuntime (libs.bundles.cloth) { transitive = false }
    include libs.fiberToCloth

    modCompileOnly (compatLibs.trinkets) { transitive = false }
    modCompileOnly (compatLibs.pehkui) { transitive = false }

    modCompileOnly (compatLibs.bundles.origins) { transitive = false }
    modLocalRuntime (compatLibs.bundles.origins) { transitive = false }
    modLocalImplementation (compatLibs.additionalEntityAttributes) {
        exclude group: "net.fabricmc"
        exclude group: "net.fabricmc.fabric-api"
    }

    modCompileOnly (compatLibs.eldritchMobs) { transitive = false }
    modCompileOnly (compatLibs.bumblezone) { transitive = false }
    modCompileOnly (compatLibs.malum) { transitive = false }
    modLocalImplementation (compatLibs.trinkets) {
        exclude group: "net.fabricmc"
        exclude group: "net.fabricmc.fabric-api"
    }
    modLocalRuntime (compatLibs.collective) {
        exclude group: "net.fabricmc"
        exclude group: "net.fabricmc.fabric-api"
    }
}

remapJar.dependsOn(project(":requiem-core").tasks.remapJar)

jar {
    from 'LICENSE-CODE'
    from 'LICENSE-ART'
}
